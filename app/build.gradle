apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.discoverandchange.pornographycrisissupport"
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

//configurations {
//    javadocDeps
//}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    // Optional -- Mockito framework
    testCompile 'org.mockito:mockito-core:1.10.19'
    // JSONObject's need to be mocked so we pull in the library here
    // @see http://stackoverflow.com/a/30759769
    testCompile 'org.json:json:20080701'
    androidTestCompile 'com.android.support:support-annotations:23.4.0'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    // Optional -- Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // adds Range and other common properties.
    compile 'org.apache.commons:commons-lang3:3.4'
    // ease of use grabbing iostreams from the network
    compile 'commons-io:commons-io:2.4'
    // used for asynchronously loading images, see http://square.github.io/picasso/
    compile 'com.squareup.picasso:picasso:2.5.2'

//    javadocDeps 'com.android.support:appcompat-v7:23.4.0'
//    javadocDeps 'com.android.support:support-annotations:23.4.0'
//    javadocDeps 'org.apache.commons:commons-lang3:3.4'
}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    classpath += configurations.javadocDeps
//    destinationDir = file("../docs/")
//}